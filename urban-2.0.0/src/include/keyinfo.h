#ifndef __KEYINFO_H__
#define __KEYINFO_H__

/* keyboard scan codes  */
enum class scan_code {
INVALID = -1,
NONE = 0,
KEY_ESC = 1,
KEY_1 = 2,
KEY_2 = 3,
KEY_3 = 4,
KEY_4 = 5,
KEY_5 = 6,
KEY_6 = 7,
KEY_7 = 8,
KEY_8 = 9,
KEY_9 = 10,
KEY_0 = 11,
KEY_MINUS = 12,
KEY_EQUALS = 13,
KEY_BACKSPACE = 14,
KEY_TAB = 15,
KEY_Q = 16,
KEY_W = 17,
KEY_E = 18,
KEY_R = 19,
KEY_T = 20,
KEY_Y = 21,
KEY_U = 22,
KEY_I = 23,
KEY_O = 24,
KEY_P = 25,
KEY_OPENBRACE = 26,
KEY_CLOSEBRACE = 27,
KEY_ENTER = 28,
KEY_CONTROL = 29,
KEY_LCONTROL = 29,
KEY_A = 30,
KEY_S = 31,
KEY_D = 32,
KEY_F = 33,
KEY_G = 34,
KEY_H = 35,
KEY_J = 36,
KEY_K = 37,
KEY_L = 38,
KEY_COLON = 39,
KEY_QUOTE = 40,
KEY_TILDE = 41,
KEY_LSHIFT = 42,
KEY_BACKSLASH = 43,
KEY_Z = 44,
KEY_X = 45,
KEY_C = 46,
KEY_V = 47,
KEY_B = 48,
KEY_N = 49,
KEY_M = 50,
KEY_COMMA = 51,
KEY_STOP = 52,
KEY_SLASH = 53,
KEY_RSHIFT = 54,
KEY_ASTERISK = 55,
KEY_ALT = 56,
KEY_SPACE = 57,
KEY_CAPSLOCK = 58,
KEY_F1 = 59,
KEY_F2 = 60,
KEY_F3 = 61,
KEY_F4 = 62,
KEY_F5 = 63,
KEY_F6 = 64,
KEY_F7 = 65,
KEY_F8 = 66,
KEY_F9 = 67,
KEY_F10 = 68,
KEY_NUMLOCK = 69,
KEY_SCRLOCK = 70,
KEY_HOME = 71,
KEY_UP = 72,
KEY_PGUP = 73,
KEY_MINUS_PAD = 74,
KEY_LEFT = 75,
KEY_5_PAD = 76,
KEY_RIGHT = 77,
KEY_PLUS_PAD = 78,
KEY_END = 79,
KEY_DOWN = 80,
KEY_PGDN = 81,
KEY_INSERT = 82,
KEY_DEL = 83,
KEY_PRTSCR = 84,
KEY_F11 = 87,
KEY_F12 = 88,
KEY_LWIN = 91,
KEY_RWIN = 92,
KEY_MENU = 93,
KEY_PAD = 100,
KEY_RCONTROL = 120,
KEY_ALTGR = 121,
KEY_SLASH2 = 122,
KEY_PAUSE = 123
};

struct KeyInfo {
	char description[16];
        scan_code num;
};

inline constexpr KeyInfo keyinfo[] = {
{"-", scan_code::KEY_MINUS},
{"=", scan_code::KEY_EQUALS},
{"BACKSPACE", scan_code::KEY_BACKSPACE},
{"TAB", scan_code::KEY_TAB},
{"Q", scan_code::KEY_Q},
{"W", scan_code::KEY_W},
{"E", scan_code::KEY_E},
{"R", scan_code::KEY_R},
{"T", scan_code::KEY_T},
{"Y", scan_code::KEY_Y},
{"U", scan_code::KEY_U},
{"I", scan_code::KEY_I},
{"O", scan_code::KEY_O},
{"P", scan_code::KEY_P},
{"[", scan_code::KEY_OPENBRACE},
{"]", scan_code::KEY_CLOSEBRACE},
{"ENTER", scan_code::KEY_ENTER},
{"LCONTROL", scan_code::KEY_LCONTROL},
{"A", scan_code::KEY_A},
{"S", scan_code::KEY_S},
{"D", scan_code::KEY_D},
{"F", scan_code::KEY_F},
{"G", scan_code::KEY_G},
{"H", scan_code::KEY_H},
{"J", scan_code::KEY_J},
{"K", scan_code::KEY_K},
{"L", scan_code::KEY_L},
{":", scan_code::KEY_COLON},
{"\"", scan_code::KEY_QUOTE},
{"~", scan_code::KEY_TILDE},
{"LSHIFT", scan_code::KEY_LSHIFT},
{"\\", scan_code::KEY_BACKSLASH},
{"Z", scan_code::KEY_Z},
{"X", scan_code::KEY_X},
{"C", scan_code::KEY_C},
{"V", scan_code::KEY_V},
{"B", scan_code::KEY_B},
{"N", scan_code::KEY_N},
{"M", scan_code::KEY_M},
{",", scan_code::KEY_COMMA},
{"/", scan_code::KEY_SLASH},
{"RSHIFT", scan_code::KEY_RSHIFT},
{"*", scan_code::KEY_ASTERISK},
{"ALT", scan_code::KEY_ALT},
{"SPACE", scan_code::KEY_SPACE},
{"HOME", scan_code::KEY_HOME},
{"UP", scan_code::KEY_UP},
{"PGUP", scan_code::KEY_PGUP},
{"PAD -", scan_code::KEY_MINUS_PAD},
{"LEFT", scan_code::KEY_LEFT},
{"PAD 5", scan_code::KEY_5_PAD},
{"RIGHT", scan_code::KEY_RIGHT},
{"PAD +", scan_code::KEY_PLUS_PAD},
{"END", scan_code::KEY_END},
{"DOWN", scan_code::KEY_DOWN},
{"PGDN", scan_code::KEY_PGDN},
{"INSERT", scan_code::KEY_INSERT},
{"DEL", scan_code::KEY_DEL},
{"RCONTROL", scan_code::KEY_RCONTROL},
{"ALTGR", scan_code::KEY_ALTGR},
{"", scan_code::NONE}
};

#endif
